#include "RasterData.h"
#include <cmath>

RasterData::RasterData()
{
    const double matrix[] =
    {
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 10, 20, 40, 10, 20, 40, 60, 30, 40, 20, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 60, 30, 50, 20, 95, 60, 80, 40, 50, 30, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 40, 20, 10, 50, 84, 40, 20, 97, 00, 20, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 50, 40, 20, 30, 67, 42, 54, 61, 20, 40, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 20, 40, 60, 30, 02, 20, 40, 10, 60, 40, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 95, 60, 80, 40, 60, 30, 50, 20, 80, 60, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 84, 40, 20, 97, 40, 20, 10, 50, 20, 40, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 67, 42, 54, 61, 50, 40, 20, 30, 54, 42, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 95, 60, 80, 40, 60, 30, 50, 20, 80, 60, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 20, 40, 60, 30, 10, 20, 40, 10, 60, 40, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    };

    QVector<double> values;

    int const TILE_COUNT = 400;

    for (int r = 0; r < TILE_COUNT; ++r)
    {
        for (int c = 0; c < TILE_COUNT; ++c)
        {
            for ( uint i = 0; i < sizeof( matrix ) / sizeof( double ); i++ )
                values += matrix[i];
        }
    }

    const int numColumns = 10;
    setValueMatrix( values, numColumns );

    auto maxAxis = sqrt(values.size());
    setInterval( Qt::XAxis,
        QwtInterval( 0, maxAxis, QwtInterval::ExcludeMaximum ) );
    setInterval( Qt::YAxis,
        QwtInterval( 0, maxAxis, QwtInterval::ExcludeMaximum ) );
    setInterval( Qt::ZAxis, QwtInterval( 0, 100) );
}

